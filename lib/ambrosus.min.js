var AmbrosusSDK=function(){'use strict';const a=a=>new Promise((b,c)=>{const d={status:a.status,data:null,message:JSON.parse(a.response).reason};(200===a.status||201===a.status)&&(d.data=JSON.parse(a.response),d.message='success',b(d)),c(d)}),b=a=>({status:400,data:null,message:a}),c=a=>({status:200,data:a,message:'success'});class d{constructor(a){this._settings=a}getRequest(b){return new Promise((c,d)=>{let e=new XMLHttpRequest;e.open('GET',`${this._settings.apiEndpoint}/${b}`,!0),e.addEventListener('load',()=>{a(e).then(a=>{c(a)}).catch(a=>{d(a)})},!1),e.send()})}postRequest(b,c){return new Promise((d,e)=>{let f=new XMLHttpRequest;f.open('POST',`${this._settings.apiEndpoint}/${b}`,!0,this._settings),f.setRequestHeader('Content-type','application/json; charset=utf-8'),f.setRequestHeader('Authorization','AMB '+this._settings.secret),f.onload=()=>{a(f).then(a=>{d(a)}).catch(a=>{e(a)})},f.send(JSON.stringify(c))})}}const e=a=>{let b=Math.floor(Date.now()/1e3);return a.content&&a.content.idData&&a.content.idData.timestamp?a.content.idData.timestamp:b},f=a=>a.results.reduce((a,{content:b,eventId:c})=>{const d=b.idData.timestamp,e=b.idData.createdBy;return b&&b.data&&b.data.filter(a=>(a.timestamp=d,a.author=e,a.name=a.name||a.type,a.action=a.type,a.type=a.type.substr(a.type.lastIndexOf('.')+1),a.eventId=c,'location'===a.type?void b.data.reduce((a,b)=>{'location'!==b.type&&(b.location=a)},a):a)).map(b=>{-1<['info','redirection','identifiers','branding'].indexOf(b.type)?(!a[b.type]||a[b.type].timestamp<b.timestamp)&&(a[b.type]=b):a.events.push(b)}),a},{events:[]}),g=a=>{let b='';for(let c in a)''!=b&&(b+='&'),b+=c+'='+encodeURIComponent(a[c]);return b};class h{constructor(a,b){this._settings=a,b.getToken().then(a=>{this._settings.token=a}),this._request=new d(this._settings)}getAssetById(a){return new Promise((b,c)=>{this._request.getRequest(`assets/${a}`).then(a=>b(a)).catch(a=>c(a))})}getAssets(a){return new Promise((b,c)=>{this._request.getRequest(`assets?${g(a)}`).then(a=>b(a)).catch(a=>c(a))})}createAsset(a){return new Promise((b,c)=>{this._request.postRequest('assets',a).then(a=>b(a)).catch(a=>c(a))})}}class i{constructor(a,b){this._settings=a,b.getToken().then(a=>{this._settings.token=a}),this._request=new d(this._settings)}getEventById(a){return new Promise((b,c)=>{this._request.getRequest(`events/${a}`).then(a=>b(a)).catch(a=>c(a))})}getEvents(a){return new Promise((b,c)=>{this._request.getRequest(`events?${g(a)}`).then(a=>b(a)).catch(a=>c(a))})}createEvent(a,b){return new Promise((c,d)=>{this._request.postRequest(`assets/${a}/events`,b).then(a=>c(a)).catch(a=>d(a))})}}class j{constructor(a){if(this._settings=a,this._request=new d(this._settings),!this._settings||!this._settings.secret||!this._settings.address)return console.error('Secret key and account address are required in order to generate an access token.'),!1}getToken(){return new Promise((a,b)=>{this._settings.token?a(this._settings.token):this._request.postRequest('token',{validUntil:16e8}).then(b=>{this._settings.token=b.data.token,a(this._settings.token)}).catch(a=>b(a))})}}return class{constructor(a){for(const b in this._settings={apiEndpoint:'https://gateway-test.ambrosus.com'},this.events={},this.empty=[],a)a.hasOwnProperty(b)&&(this._settings[b]=a[b]);this._auth=new j(this._settings),this._assets=new h(this._settings,this._auth),this._events=new i(this._settings,this._auth)}getAssetById(a){return new Promise((c,d)=>a?this._assets.getAssetById(a).then(a=>c(a)).catch(a=>d(a)):d(b('Asset ID is missing.')))}getEventById(a){return new Promise((c,d)=>a?this._events.getEventById(a).then(a=>c(a)).catch(a=>d(a)):d(b('Event ID is missing.')))}getAssets(a={}){return new Promise((b,c)=>this._assets.getAssets(a).then(a=>b(a)).catch(a=>c(a)))}getEvents(a){return new Promise((b,c)=>this._events.getEvents(a).then(a=>b(a)).catch(a=>c(a)))}createAsset(a={}){return new Promise((b,c)=>{let d={content:{idData:{createdBy:this._settings.address,timestamp:e(a),sequenceNumber:0}}};return a.data&&(d.data=a.data),this._assets.createAsset(d).then(c=>{if(1<=a.length){let d=[];for(let b=0;b<a.length;b++)d[b]=new Promise(d=>this.createEvent(c.data.assetId,a[b]).then(a=>{d(a)}));this.emit('asset:created'),b(c)}else return this.emit('asset:created'),void b(c)}).catch(a=>c(a))})}createEvent(a,c){return new Promise((d,f)=>{if(!a)return f(b('Asset ID is missing.'));if(!c)return f(b('Event data is missing.'));let g={content:{idData:{assetId:a,timestamp:e(c),accessLevel:0,createdBy:this._settings.address}}};if(c.content&&c.content.data)g.content.data=c.content.data;else return f(b('Invalid data: No content found at content.data.'));return this._events.createEvent(a,g).then(a=>{this.emit('event:created'),d(a)}).catch(a=>f(a))})}parseEvents(a){return new Promise((d,e)=>a&&a.results?d(c(f(a))):e(b('Results array is missing.')))}on(a,b,c){return(this.events[a]=this.events[a]||[]).push([b,c]),this}off(a,b){a||(this.events={});let c=this.events[a]||this.empty,d=c.length=b?c.length:0;for(;d--;)b===c[d][0]&&c.splice(d,1);return this}emit(a){let b,c=this.events[a]||this.empty,d=0<c.length?c.slice(0,c.length):c,e=0;for(;b=d[e++];)b[0].apply(b[1],this.empty.slice.call(arguments,1));return this}}}();
